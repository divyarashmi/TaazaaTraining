CREATE DATABASE usermanagement;
\c usermanagement;
CREATE TABLE membership(username VARCHAR(50),upassword int);
INSERT INTO membership VALUES('Divya',123);
INSERT INTO membership VALUES('anuj',456);
INSERT INTO membership VALUES('shubham',546);



create function uservalidate(name varchar,password int)
returns int
AS $$
begin
return (select upassword from membership where name=username AND password=upassword);
end ;
$$ Language plpgsql;






 CREATE DATABASE taazaadbs;
 \c taazaadbs;

CREATE TABLE tbl_users
taazaadbs-# (
taazaadbs(# username character varying(50) NOT NULL primary key,
taazaadbs(# password character varying(30)
taazaadbs(# )
taazaadbs-# ;


INSERT INTO tbl_users VALUES('Dibu','test');
INSERT INTO tbl_users VALUES('rahul','test1');

SELECT * FROM tbl_users;



taazaadbs=# CREATE FUNCTION uservalidate(uname character varying,upass character varying )
taazaadbs-# returns int
taazaadbs-# as
taazaadbs-# $$
taazaadbs$# begin
taazaadbs$# if (select count (*) from tbl_users where username=uname and password=upass)>0 then
taazaadbs$# return 1;
taazaadbs$# else
taazaadbs$# return 0;
taazaadbs$# end if;
taazaadbs$# end;
taazaadbs$# $$ language plpgsql;



taazaadbs=# select uservalidate('Dibu','test');
 uservalidate
--------------
            1
(1 row)










procedure?


create table accounts (
    id int generated by default as identity,
    name varchar(100) not null,
    balance dec(15, 2) not null,
    primary key(id)
);

insert into accounts(name, balance)
values('Raju', 10000);

insert into accounts(name, balance)
values('Divya', 10000);

select * from accounts;




create procedure transfer(
   sender int,
   receiver int, 
   amount dec
)
language plpgsql    
as $$
begin
    

    update accounts 
    set balance = balance - amount 
    where id = sender;

    
    update accounts 
    set balance = balance + amount 
    where id = receiver;

    commit;
end;$$;


call transfer(1, 2, 1000);